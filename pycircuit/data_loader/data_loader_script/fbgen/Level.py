# automatically generated by the FlatBuffers compiler, do not modify

# namespace:

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class Level(object):
    __slots__ = ["_tab"]

    @classmethod
    def SizeOf(cls):
        return 16

    # Level
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Level
    def Price(self):
        return self._tab.Get(
            flatbuffers.number_types.Float64Flags,
            self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0),
        )

    # Level
    def Size(self):
        return self._tab.Get(
            flatbuffers.number_types.Float64Flags,
            self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8),
        )


def CreateLevel(builder, price, size):
    builder.Prep(8, 16)
    builder.PrependFloat64(size)
    builder.PrependFloat64(price)
    return builder.Offset()
